---
// LanguageToggle.astro - Ë®ÄË™ûÂàá„ÇäÊõø„Åà„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà
---

<!-- Âè≥‰∏ãÂõ∫ÂÆö„ÅÆË®ÄË™ûÂàá„ÇäÊõø„Åà„Éú„Çø„É≥ -->
<div class="language-toggle-floating">
  <button 
    id="language-toggle" 
    class="language-toggle-btn group"
    aria-label="Ë®ÄË™û„ÇíÂàá„ÇäÊõø„Åà„Çã / Toggle Language"
  >
    <div class="flag-container">
      <span id="current-flag" class="flag">üá∫üá∏</span>
    </div>
    <div class="lang-text-container">
      <span id="current-lang-text" class="lang-text">EN</span>
      <div class="lang-switch-indicator">
        <svg class="switch-icon" viewBox="0 0 12 12" fill="none">
          <path d="M4 5L6 7L8 5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </div>
    </div>
  </button>
</div>

<style>
  .language-toggle-floating {
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    z-index: 9999;
    transition: all 0.3s ease;
  }

  /* „É¢„Éê„Ç§„É´ÂØæÂøú */
  @media (max-width: 768px) {
    .language-toggle-floating {
      bottom: 1.5rem;
      right: 1.5rem;
    }
  }

  /* Ë∂ÖÂ∞èÁîªÈù¢ÂØæÂøú */
  @media (max-width: 480px) {
    .language-toggle-floating {
      bottom: 1rem;
      right: 1rem;
    }
  }

  .language-toggle-btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1rem;
    background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
    border: 2px solid #e2e8f0;
    border-radius: 2rem;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    font-size: 0.875rem;
    font-weight: 600;
    color: #475569;
    box-shadow: 
      0 10px 25px -5px rgb(0 0 0 / 0.1), 
      0 4px 6px -2px rgb(0 0 0 / 0.05),
      0 0 0 1px rgb(255 255 255 / 0.05);
    position: relative;
    overflow: hidden;
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
  }

  /* „É¢„Éê„Ç§„É´„Åß„ÅÆ„Éú„Çø„É≥„Çµ„Ç§„Ç∫Ë™øÊï¥ */
  @media (max-width: 768px) {
    .language-toggle-btn {
      padding: 0.625rem 0.875rem;
      font-size: 0.8125rem;
      gap: 0.4rem;
    }
  }

  .language-toggle-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, transparent 0%, rgba(59, 130, 246, 0.1) 50%, transparent 100%);
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .language-toggle-btn:hover::before {
    opacity: 1;
  }

  .language-toggle-btn:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px 0 rgb(0 0 0 / 0.15), 0 2px 4px -1px rgb(0 0 0 / 0.1);
    border-color: #3b82f6;
  }

  .language-toggle-btn:active {
    transform: translateY(0);
    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1);
  }

  .flag-container {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 50%;
    background: white;
    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1);
    transition: transform 0.3s ease;
  }

  .group:hover .flag-container {
    transform: scale(1.1);
  }

  .flag {
    font-size: 1rem;
    line-height: 1;
  }

  .lang-text-container {
    display: flex;
    align-items: center;
    gap: 0.25rem;
  }

  .lang-text {
    font-weight: 600;
    letter-spacing: 0.025em;
    transition: color 0.3s ease;
  }

  .group:hover .lang-text {
    color: #3b82f6;
  }

  .lang-switch-indicator {
    display: flex;
    align-items: center;
    opacity: 0.6;
    transition: all 0.3s ease;
  }

  .group:hover .lang-switch-indicator {
    opacity: 1;
    transform: translateY(1px);
  }

  .switch-icon {
    width: 0.75rem;
    height: 0.75rem;
    transition: transform 0.3s ease;
  }

  .group:hover .switch-icon {
    transform: rotate(180deg);
  }

  /* „ÉÄ„Éº„ÇØ„É¢„Éº„ÉâÂØæÂøú */
  :global(.dark) .language-toggle-btn {
    background: linear-gradient(135deg, #1e293b 0%, #334155 100%);
    border-color: #475569;
    color: #cbd5e1;
  }

  :global(.dark) .language-toggle-btn::before {
    background: linear-gradient(135deg, transparent 0%, rgba(147, 197, 253, 0.1) 50%, transparent 100%);
  }

  :global(.dark) .language-toggle-btn:hover {
    border-color: #60a5fa;
  }

  :global(.dark) .flag-container {
    background: #0f172a;
    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.3);
  }

  :global(.dark) .group:hover .lang-text {
    color: #60a5fa;
  }

  /* „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥ÂäπÊûú */
  @keyframes flagSwap {
    0% { transform: scale(1) rotate(0deg); }
    50% { transform: scale(0.8) rotate(180deg); }
    100% { transform: scale(1) rotate(360deg); }
  }

  .flag-swap {
    animation: flagSwap 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  }

  @keyframes textSlide {
    0% { transform: translateX(0); opacity: 1; }
    50% { transform: translateX(-10px); opacity: 0; }
    100% { transform: translateX(0); opacity: 1; }
  }

  .text-slide {
    animation: textSlide 0.4s ease-in-out;
  }
</style>

<script is:inline>
  // ÁøªË®≥„Éá„Éº„Çø
  const translations = {
    en: {
      // Header
      'nav.home': 'home',
      'nav.about': 'about',
      'nav.experience': 'experience', 
      'nav.skills': 'skills',
      'nav.blog': 'blog',
      'nav.contact': 'contact',
      'menu.title': 'Menu',
      
      // Hero Section
      'hero.greeting': "Hi, I'm",
      'hero.description': "I'm a university student in Aichi, studying programming.",
      'hero.contact-btn': 'Get In Touch',
      'hero.github-btn': 'View GitHub',
      
      // About Section
      'about.title': 'About Me',
      'about.currently-learning': 'Currently Learning',
      'about.currently-learning-desc': "I'm currently working on a desktop application using React, Electron, and TypeScript for the U-22 Programming Contest. In university, I'm also learning object-oriented programming with Java as part of my coursework.",
      'about.favorite-tech': 'Favorite Technologies',
      'about.future-goals': 'Future Goals',
      'about.future-goals-desc': 'My goal is to become a full-stack engineer with expertise in both backend and frontend development. After gaining hands-on experience in the field, I aim to grow into a highly skilled developer capable of contributing to open-source projects.',
      'about.overview': 'Overview.',
      'about.overview-desc': "Hi, I'm Taiga Oishi, a student majoring in Computer Systems at the Faculty of Information Science at Aichi Institute of Technology. My hobbies include watching movies and reading. I started learning programming in May of my first year at university, and since my second year, I've been committing code to GitHub every day to keep growing as a developer.",
      
      // Experience Section
      'experience.title': 'Experience',
      'experience.dept-info-science': 'Department of Information Science',
      'experience.aichi-institute': 'Aichi Institute of Technology',
      'experience.study-java': 'Studying Java programming, C programming',
      'experience.passed-fe': 'Passed the Fundamental Information Technology Engineer Examination (FE) in May 2023 during my final year of high school',
      'experience.geekcamp-title': 'GEEKCAMP Hackathon Vol.19',
      'experience.supporterz': 'Supporterz Inc.',
      'experience.joined-individual': 'Joined individually and formed a team with first-time collaborators',
      'experience.built-prototype': 'Built a working prototype in just two days using React for the frontend',
      'experience.frontend-dev': 'Took charge of frontend development and gained hands-on experience in team-based software development',
      'experience.matech-member': 'Member of a Student Engineering Community',
      'experience.matech-org': 'MaTech',
      'experience.joined-matech': 'Joined MaTech, a student-run engineering community with around 20 members',
      'experience.weekly-presentations': 'Participate in weekly presentation sessions to share what we\'ve learned',
      'experience.hackathons-study': 'Engage in hackathons, study groups, and meetups through platforms like connpass',
      'experience.communication-skills': 'Improving communication and collaboration skills through team-based activities',
      'experience.u22-project': 'U-22 Programming Contest Project',
      'experience.ipa-support': 'Supported by IPA Japan',
      'experience.desktop-app': 'Developing a cross-platform desktop application using React, Electron, and TypeScript',
      'experience.ui-ux-focus': 'Focusing on intuitive UI/UX and efficient clipboard data management',
      'experience.contest-submission': 'Aiming to submit the final product to the U-22 Programming Contest in summer 2025',
      
      // Skills Section
      'skills.title': 'Skills & Technologies',
      'skills.frontend': 'Frontend',
      'skills.backend': 'Backend',
      'skills.tools': 'Tools & Dev',
      'skills.learning': 'Currently Learning',
      'skills.react-learning': 'React (Learning)',
      'skills.nodejs-basic': 'Node.js (Basic)',
      'skills.express-basic': 'Express (Basic)',
      'skills.mongodb-firebase': 'MongoDB / Firebase',
      'skills.figma-ui': 'Figma (UI Design Basics)',
      'skills.linux-basic': 'Linux Basic Operations',
      'skills.docker-intro': 'Docker Introduction',
      'skills.cloud-aws': 'Cloud (AWS / Firebase)',
      
      // Blog Section
      'blog.title': 'Blog & Articles',
      'blog.tech-blog': 'Tech Blog',
      'blog.tech-blog-desc': 'Personal blog where I share my learning journey and technical insights',
      'blog.zenn-desc': 'I write articles about practical solutions to problems in Unity.',
      'blog.qiita-desc': 'Programming tips and solutions to common development challenges',
      'blog.not-available': '(NOT AVAILABLE)',
      'blog.visit-qiita': 'Visit Qiita',
      
      // Contact Section
      'contact.title': 'Get In Touch',
      'contact.connect-title': "Let's Connect",
      'contact.connect-desc': "I'm always open to connecting with fellow developers, collaborators, or anyone who shares an interest in tech. Feel free to reach out ‚Äî whether it's about a project or just to say hi!",
      'contact.email': 'Email',
      'contact.github': 'GitHub',
      'contact.twitter': 'X(Twitter)',
      'contact.form-title': 'Send a Message',
      'contact.form-desc': "Fill out the form below and I'll get back to you soon",
      'contact.name-placeholder': 'Your Name',
      'contact.email-placeholder': 'Your Email',
      'contact.message-placeholder': 'Your Message',
      'contact.send-btn': 'Send Message ‚Üí'
    },
    
    ja: {
      // Header
      'nav.home': '„Éõ„Éº„É†',
      'nav.about': 'ÁßÅ„Å´„Å§„ÅÑ„Å¶',
      'nav.experience': 'ÁµåÈ®ì',
      'nav.skills': '„Çπ„Ç≠„É´',
      'nav.blog': '„Éñ„É≠„Ç∞',
      'nav.contact': '„ÅäÂïè„ÅÑÂêà„Çè„Åõ',
      'menu.title': '„É°„Éã„É•„Éº',
      
      // Hero Section
      'hero.greeting': '„Åì„Çì„Å´„Å°„ÅØ„ÄÅÁßÅ„ÅØ',
      'hero.description': 'ÊÑõÁü•Áúå„ÅÆÂ§ßÂ≠¶Áîü„Åß„ÄÅ„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞„ÇíÂ≠¶„Çì„Åß„ÅÑ„Åæ„Åô„ÄÇ',
      'hero.contact-btn': '„ÅäÂïè„ÅÑÂêà„Çè„Åõ',
      'hero.github-btn': 'GitHub „ÇíË¶ã„Çã',
      
      // About Section
      'about.title': 'ÁßÅ„Å´„Å§„ÅÑ„Å¶',
      'about.currently-learning': 'ÁèæÂú®Â≠¶Áøí‰∏≠',
      'about.currently-learning-desc': 'ÁèæÂú®„ÄÅU-22„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞„Ç≥„É≥„ÉÜ„Çπ„ÉàÂêë„Åë„Å´React„ÄÅElectron„ÄÅTypeScript„Çí‰ΩøÁî®„Åó„Åü„Éá„Çπ„ÇØ„Éà„ÉÉ„Éó„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÇíÈñãÁô∫„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇÂ§ßÂ≠¶„Åß„ÅØ„ÄÅÊéàÊ•≠„ÅÆ‰∏ÄÁí∞„Å®„Åó„Å¶Java„Åß„Ç™„Éñ„Ç∏„Çß„ÇØ„ÉàÊåáÂêë„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞„ÇÇÂ≠¶„Çì„Åß„ÅÑ„Åæ„Åô„ÄÇ',
      'about.favorite-tech': 'Â•Ω„Åç„Å™ÊäÄË°ì',
      'about.future-goals': 'Â∞ÜÊù•„ÅÆÁõÆÊ®ô',
      'about.future-goals-desc': '„Éê„ÉÉ„ÇØ„Ç®„É≥„Éâ„Å®„Éï„É≠„É≥„Éà„Ç®„É≥„Éâ„ÅÆ‰∏°Êñπ„Å´Á≤æÈÄö„Åó„Åü„Éï„É´„Çπ„Çø„ÉÉ„ÇØ„Ç®„É≥„Ç∏„Éã„Ç¢„Å´„Å™„Çã„Åì„Å®„ÅåÁõÆÊ®ô„Åß„Åô„ÄÇÂÆüÂãôÁµåÈ®ì„ÇíÁ©ç„Çì„Å†Âæå„ÅØ„ÄÅ„Ç™„Éº„Éó„É≥„ÇΩ„Éº„Çπ„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Å´Ë≤¢ÁåÆ„Åß„Åç„ÇãÈ´òÂ∫¶„Å™„Çπ„Ç≠„É´„ÇíÊåÅ„Å§ÈñãÁô∫ËÄÖ„Å´ÊàêÈï∑„Åó„Åü„ÅÑ„Å®ËÄÉ„Åà„Å¶„ÅÑ„Åæ„Åô„ÄÇ',
      'about.overview': 'Ê¶ÇË¶Å',
      'about.overview-desc': '„Åì„Çì„Å´„Å°„ÅØ„ÄÅÊÑõÁü•Â∑•Ê•≠Â§ßÂ≠¶ÊÉÖÂ†±ÁßëÂ≠¶ÈÉ®„Ç≥„É≥„Éî„É•„Éº„Çø„Ç∑„Çπ„ÉÜ„É†Â∞ÇÊîª„ÅÆ2Âπ¥„ÄÅÂ§ßÁü≥Â§ßÈõÖ„Åß„Åô„ÄÇË∂£Âë≥„ÅØÊò†ÁîªÈëëË≥û„Å®Ë™≠Êõ∏„Åß„Åô„ÄÇÂ§ßÂ≠¶1Âπ¥Áîü„ÅÆ5Êúà„Åã„Çâ„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞„ÅÆÂ≠¶Áøí„ÇíÂßã„ÇÅ„ÄÅ2Âπ¥Áîü„Åã„Çâ„ÅØÈñãÁô∫ËÄÖ„Å®„Åó„Å¶ÊàêÈï∑„ÅóÁ∂ö„Åë„Çã„Åü„ÇÅ„Å´ÊØéÊó•GitHub„Å´„Ç≥„Éº„Éâ„Çí„Ç≥„Éü„ÉÉ„Éà„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ',
      
      // Experience Section
      'experience.title': 'ÁµåÈ®ì',
      'experience.dept-info-science': 'ÊÉÖÂ†±ÁßëÂ≠¶ÈÉ®',
      'experience.aichi-institute': 'ÊÑõÁü•Â∑•Ê•≠Â§ßÂ≠¶',
      'experience.study-java': 'Java „Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞„ÄÅC „Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞„ÇíÂ≠¶Áøí',
      'experience.passed-fe': 'È´òÊ†°3Âπ¥Áîü„ÅÆ2023Âπ¥5Êúà„Å´Âü∫Êú¨ÊÉÖÂ†±ÊäÄË°ìËÄÖË©¶È®ìÔºàFEÔºâ„Å´ÂêàÊ†º',
      'experience.geekcamp-title': 'GEEKCAMP „Éè„ÉÉ„Ç´„ÇΩ„É≥ Vol.19',
      'experience.supporterz': 'Ê†™Âºè‰ºöÁ§æ„Çµ„Éù„Éº„Çø„Éº„Ç∫',
      'experience.joined-individual': 'ÂÄã‰∫∫ÂèÇÂä†„ÅßÂàùÂØæÈù¢„ÅÆ„É°„É≥„Éê„Éº„Å®„ÉÅ„Éº„É†„ÇíÁµêÊàê',
      'experience.built-prototype': 'React „Çí‰ΩøÁî®„Åó„Åü„Éï„É≠„É≥„Éà„Ç®„É≥„Éâ„Åß2Êó•Èñì„ÅßÂãï‰Ωú„Åô„Çã„Éó„É≠„Éà„Çø„Ç§„Éó„ÇíÊßãÁØâ',
      'experience.frontend-dev': '„Éï„É≠„É≥„Éà„Ç®„É≥„ÉâÈñãÁô∫„ÇíÊãÖÂΩì„Åó„ÄÅ„ÉÅ„Éº„É†ÈñãÁô∫„ÅÆÂÆüË∑µÁµåÈ®ì„ÇíÁ©ç„ÇÄ',
      'experience.matech-member': 'Â≠¶Áîü„Ç®„É≥„Ç∏„Éã„Ç¢„Ç≥„Éü„É•„Éã„ÉÜ„Ç£„ÅÆ„É°„É≥„Éê„Éº',
      'experience.matech-org': 'MaTech',
      'experience.joined-matech': 'Á¥Ñ20Âêç„ÅÆÂ≠¶Áîü„Å´„Çà„Çã„Ç®„É≥„Ç∏„Éã„Ç¢„Ç≥„Éü„É•„Éã„ÉÜ„Ç£ MaTech „Å´ÂèÇÂä†',
      'experience.weekly-presentations': 'ÈÄ±Ê¨°„ÅÆÁô∫Ë°®‰ºö„ÅßÂ≠¶„Çì„Å†„Åì„Å®„ÇíÂÖ±Êúâ',
      'experience.hackathons-study': 'connpass „Å™„Å©„ÅÆ„Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É†„ÇíÈÄö„Åò„Å¶„Éè„ÉÉ„Ç´„ÇΩ„É≥„ÄÅÂãâÂº∑‰ºö„ÄÅmeetup „Å´ÂèÇÂä†',
      'experience.communication-skills': '„ÉÅ„Éº„É†Ê¥ªÂãï„ÇíÈÄö„Åò„Å¶„Ç≥„Éü„É•„Éã„Ç±„Éº„Ç∑„Éß„É≥ËÉΩÂäõ„Å®ÂçîÂäõ„Çπ„Ç≠„É´„ÇíÂêë‰∏ä',
      'experience.u22-project': 'U-22 „Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞„Ç≥„É≥„ÉÜ„Çπ„Éà „Éó„É≠„Ç∏„Çß„ÇØ„Éà',
      'experience.ipa-support': 'IPAÔºàÊÉÖÂ†±Âá¶ÁêÜÊé®ÈÄ≤Ê©üÊßãÔºâÊîØÊè¥',
      'experience.desktop-app': 'React„ÄÅElectron„ÄÅTypeScript „Çí‰ΩøÁî®„Åó„Åü„ÇØ„É≠„Çπ„Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É†„Éá„Çπ„ÇØ„Éà„ÉÉ„Éó„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÇíÈñãÁô∫',
      'experience.ui-ux-focus': 'Áõ¥ÊÑüÁöÑ„Å™ UI/UX „Å®ÂäπÁéáÁöÑ„Å™„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Éá„Éº„ÇøÁÆ°ÁêÜ„Å´ÈáçÁÇπ„ÇíÁΩÆ„Åè',
      'experience.contest-submission': '2025Âπ¥Â§è„ÅÆU-22„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞„Ç≥„É≥„ÉÜ„Çπ„Éà„Å∏„ÅÆÊúÄÁµÇË£ΩÂìÅÊèêÂá∫„ÇíÁõÆÊåá„Åô',
      
      // Skills Section
      'skills.title': '„Çπ„Ç≠„É´„ÉªÊäÄË°ì',
      'skills.frontend': '„Éï„É≠„É≥„Éà„Ç®„É≥„Éâ',
      'skills.backend': '„Éê„ÉÉ„ÇØ„Ç®„É≥„Éâ',
      'skills.tools': '„ÉÑ„Éº„É´„ÉªÈñãÁô∫',
      'skills.learning': 'Â≠¶Áøí‰∏≠',
      'skills.react-learning': 'ReactÔºàÂ≠¶Áøí‰∏≠Ôºâ',
      'skills.nodejs-basic': 'Node.jsÔºàÂü∫Á§éÔºâ',
      'skills.express-basic': 'ExpressÔºàÂü∫Á§éÔºâ',
      'skills.mongodb-firebase': 'MongoDB / Firebase',
      'skills.figma-ui': 'FigmaÔºàUI„Éá„Ç∂„Ç§„É≥ÂÖ•ÈñÄÔºâ',
      'skills.linux-basic': 'Linux Âü∫Êú¨Êìç‰Ωú',
      'skills.docker-intro': 'Docker ÂÖ•ÈñÄ',
      'skills.cloud-aws': 'CloudÔºàAWS / FirebaseÔºâ',
      
      // Blog Section
      'blog.title': '„Éñ„É≠„Ç∞„ÉªË®ò‰∫ã',
      'blog.tech-blog': 'Tech Blog',
      'blog.tech-blog-desc': 'Â≠¶Áøí„ÅÆÈÅéÁ®ã„ÇÑÊäÄË°ìÁöÑ„Å™Ê¥ûÂØü„ÇíÂÖ±Êúâ„Åô„ÇãÂÄã‰∫∫„Éñ„É≠„Ç∞',
      'blog.zenn-desc': 'Unity„Å´„Åä„Åë„ÇãË™≤È°å„Å´ÂØæ„Åô„ÇãÂÆüË∑µÁöÑ„Å™Ëß£Ê±∫Á≠ñ„Å´Èñ¢„Åô„ÇãË®ò‰∫ã',
      'blog.qiita-desc': '„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞„ÅÆ„Ç≥„ÉÑ„ÇÑ‰∏ÄËà¨ÁöÑ„Å™ÈñãÁô∫Ë™≤È°å„ÅÆËß£Ê±∫Á≠ñ',
      'blog.not-available': 'ÔºàÂà©Áî®‰∏çÂèØÔºâ',
      'blog.visit-qiita': 'Qiita„ÇíË¶ã„Çã',
      
      // Contact Section
      'contact.title': '„ÅäÂïè„ÅÑÂêà„Çè„Åõ',
      'contact.connect-title': '„Å§„Å™„Åå„Çä„Åæ„Åó„Çá„ÅÜ',
      'contact.connect-desc': 'ÈñãÁô∫ËÄÖ‰ª≤Èñì„ÄÅ„Ç≥„É©„Éú„É¨„Éº„Çø„Éº„ÄÅÊäÄË°ì„Å´ËààÂë≥„ÅÆ„ÅÇ„ÇãÊñπ„Å®„ÅÆ„Å§„Å™„Åå„Çä„ÇíÂ§ßÂàá„Å´„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆ„Åì„Å®„Åß„ÇÇ„ÄÅ„Åü„Å†„ÅÆ„ÅîÊå®Êã∂„Åß„ÇÇ„ÄÅ„ÅäÊ∞óËªΩ„Å´„ÅäÂ£∞„Åå„Åë„Åè„Å†„Åï„ÅÑÔºÅ',
      'contact.email': '„É°„Éº„É´',
      'contact.github': 'GitHub',
      'contact.twitter': 'X(Twitter)',
      'contact.form-title': '„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÈÄÅ„Çã',
      'contact.form-desc': '‰∏ãË®ò„ÅÆ„Éï„Ç©„Éº„É†„Å´„ÅîË®òÂÖ•„ÅÑ„Åü„Å†„Åë„Çå„Å∞„ÄÅ„Åô„Åê„Å´„ÅîËøî‰ø°„ÅÑ„Åü„Åó„Åæ„Åô',
      'contact.name-placeholder': '„ÅäÂêçÂâç',
      'contact.email-placeholder': '„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ',
      'contact.message-placeholder': '„É°„ÉÉ„Çª„Éº„Ç∏',
      'contact.send-btn': '„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÈÄÅ‰ø° ‚Üí'
    }
  };

  class LanguageToggle {
    constructor() {
      this.currentLang = this.getCurrentLanguage();
      
      // DOMË¶ÅÁ¥†„ÇíÈÅÖÂª∂ÂèñÂæó
      this.findElements();
    }

    findElements() {
      this.button = document.getElementById('language-toggle');
      this.flagElement = document.getElementById('current-flag');
      this.textElement = document.getElementById('current-lang-text');
      
      if (this.button && this.flagElement && this.textElement) {
        this.init();
      } else {
        // Ë¶ÅÁ¥†„ÅåË¶ã„Å§„Åã„Çâ„Å™„ÅÑÂ†¥Âêà„ÅØÂ∞ë„ÅóÂæÖ„Å£„Å¶„Åã„ÇâÂÜçË©¶Ë°å
        setTimeout(() => {
          this.findElements();
        }, 50);
      }
    }

    getCurrentLanguage() {
      return localStorage.getItem('language') || 'en';
    }

    setLanguage(lang) {
      localStorage.setItem('language', lang);
      this.currentLang = lang;
    }

    translate(key) {
      return translations[this.currentLang][key] || translations['en'][key] || key;
    }

    updateButton() {
      if (this.flagElement && this.textElement) {
        if (this.currentLang === 'ja') {
          this.flagElement.textContent = 'üáØüáµ';
          this.textElement.textContent = 'JP';
        } else {
          this.flagElement.textContent = 'üá∫üá∏';
          this.textElement.textContent = 'EN';
        }
      }
    }

    updateButtonWithAnimation() {
      if (this.flagElement && this.textElement) {
        // „Éï„É©„Ç∞„Å®„ÉÜ„Ç≠„Çπ„Éà„Å´„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥„ÇíËøΩÂä†
        this.flagElement.classList.add('flag-swap');
        this.textElement.classList.add('text-slide');
        
        setTimeout(() => {
          if (this.currentLang === 'ja') {
            this.flagElement.textContent = 'üáØüáµ';
            this.textElement.textContent = 'JP';
          } else {
            this.flagElement.textContent = 'üá∫üá∏';
            this.textElement.textContent = 'EN';
          }
          
          // „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥„ÇØ„É©„Çπ„ÇíÂâäÈô§
          setTimeout(() => {
            this.flagElement.classList.remove('flag-swap');
            this.textElement.classList.remove('text-slide');
          }, 100);
        }, 200);
      }
    }

    updateAllTexts() {
      const elements = document.querySelectorAll('[data-translate]');
      elements.forEach(element => {
        const key = element.getAttribute('data-translate');
        if (element.tagName === 'INPUT' || element.tagName === 'TEXTAREA') {
          element.placeholder = this.translate(key);
        } else {
          element.textContent = this.translate(key);
        }
      });
    }

    toggleLanguage() {
      const newLang = this.currentLang === 'en' ? 'ja' : 'en';
      this.setLanguage(newLang);
      this.updateButtonWithAnimation();
      
      // Â∞ë„ÅóÈÅÖÂª∂„Åï„Åõ„Å¶„ÉÜ„Ç≠„Çπ„Éà„ÇíÊõ¥Êñ∞Ôºà„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥ÂæåÔºâ
      setTimeout(() => {
        this.updateAllTexts();
      }, 300);
      
      // „Ç´„Çπ„Çø„É†„Ç§„Éô„É≥„Éà„ÇíÁô∫ÁÅ´
      window.dispatchEvent(new CustomEvent('languageChanged', { 
        detail: { language: newLang } 
      }));
    }

    init() {
      console.log('LanguageToggle initializing...', this.button);
      
      if (this.button) {
        this.button.addEventListener('click', (e) => {
          e.preventDefault();
          console.log('Language toggle clicked');
          this.toggleLanguage();
        });
        console.log('Event listener added');
      } else {
        console.error('Button not found');
      }
      
      // ÂàùÊúüË°®Á§∫„ÇíÊõ¥Êñ∞
      this.updateButton();
      
      // Â∞ë„ÅóÈÅÖÂª∂„Åï„Åõ„Å¶ÂàùÊúü„ÉÜ„Ç≠„Çπ„Éà„ÇíÊõ¥Êñ∞
      setTimeout(() => {
        this.updateAllTexts();
      }, 100);
    }
  }

  // DOMË™≠„ÅøËæº„ÅøÂÆå‰∫ÜÂæå„Å´ÂàùÊúüÂåñ
  function initLanguageToggle() {
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', () => {
        new LanguageToggle();
      });
    } else {
      new LanguageToggle();
    }
  }

  // Âç≥Â∫ß„Å´ÂàùÊúüÂåñ„ÇíË©¶Ë°å
  initLanguageToggle();

  // „Ç®„ÇØ„Çπ„Éù„Éº„ÉàÔºà‰ªñ„ÅÆ„Çπ„ÇØ„É™„Éó„Éà„Åã„Çâ‰ΩøÁî®ÂèØËÉΩÔºâ
  window.LanguageToggle = LanguageToggle;
</script>